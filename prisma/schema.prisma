// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  clerkUserId String @unique
  email String @unique
  name String
  imageUrl String
  articles Articles[]
  comments Comments[]
  likes Likes[]
  createdAt DateTime @default(now())
}

model Articles {
  id String @id @default(cuid())
  title String
  content String
  category String
  featuredImage String
  author User @relation(fields: [authorId], references: [id])
  authorId String
  comments Comments[]
  likes Likes[]
  createdAt DateTime @default(now())
}

model Comments {
  id String @id @default(cuid())
  content String
  author User @relation(fields: [authorId], references: [id])
  authorId String
  article Articles @relation(fields: [articleId], references: [id])
  articleId String
  createdAt DateTime @default(now())
}

model Likes {
  id String @id @default(cuid())
  author User @relation(fields: [authorId], references: [id])
  authorId String
  article Articles @relation(fields: [articleId], references: [id])
  articleId String
  createdAt DateTime @default(now())

  @@unique([authorId, articleId]) // Ensure a user can like an article only one time
}